{
	"Leptos component": {
		"scope": "rust",
		"prefix": ["#[component]"],
		"description": "Create a Leptos component",
		"body": [
			"/// ${2:Documentation for [`$1`]}",
			"#[component]",
			"pub fn ${1:}() -> impl IntoView {",
			"    ${0:}",
			"",
			"    view! {",
			"        ${3:}",
			"    }",
			"}"
		]
	},
	"Leptos server function": {
		"scope": "rust",
		"prefix": ["#[server]"],
		"description": "Create a Leptos server function",
		"body": [
			"/// ${2:Documentation for [`$1`]}",
			"#[server]",
			"pub async fn ${1:}(param: String) -> Result<(), ServerFnError> {",
			"    ${0:}",
			"",
			"    match ${3:}",
			"    {",
			"        Ok(_) => Ok(()),",
			"        Err(e) => Err(ServerFnError::ServerError(e.to_string())),",
			"    }",
			"}"
		]
	},
	"Leptos shell": {
		"scope": "rust",
		"prefix": ["shell()"],
		"description": "Create a Leptos shell",
		"body": [
			"pub fn shell(options: LeptosOptions) -> impl IntoView {",
			"    view! {",
			"        <!DOCTYPE html>",
			"        <html lang=\"en\">",
			"            <head>",
			"                <meta charset=\"utf-8\" />",
			"                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />",
			"                <AutoReload options=options.clone() />",
			"                <HydrationScripts options />",
			"                <MetaTags />",
			"            </head>",
			"            <body>",
			"                <App />",
			"            </body>",
			"        </html>",
			"    }",
			"}"
		]
	}
}
